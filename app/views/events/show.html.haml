- content_for :header do
  = javascript_include_tag 'tiny_mce/tiny_mce' 
  - if cookies[:google_maps]
    = Mapstraction.header(:google, :host=>request.host)
    = @map.to_html
  - if cookies[:yahoo_maps]
    = Mapstraction.header(:yahoo, :host=>request.host)
    = @map.to_html
  - if cookies[:openlayers_maps]
    = Mapstraction.header(:openlayers, :host=>request.host)
    = @map.to_html


  
.ical= link_to image_tag('ical.gif'), :format => 'ics'
%h1{ :class => "#{'canceled' if @event.canceled}" }
  = h @event.title

- if logged_in?
  .contextmenu
    - if @event.bookmarked_by_user? current_user
      = link_to t(".contextmenu.unsubscribe"), url_for(:controller => 'users',:action => 'unbookmark', :id => current_user, :event => @event)
    - else
      = link_to t(".contextmenu.subscribe"), url_for(:controller => 'users',:action => 'bookmark', :id => current_user, :event => @event)
    - allow :user => [:owns?, :is_admin?] do
      %div{ :class => event_owner_class}
        | 
        = link_to t(".contextmenu.edit"), edit_event_path(@event)
        |
        - if @event.canceled
          = link_to t(".contextmenu.uncancel"), uncancel_event_path(@event), :confirm => t(".confirm.uncancel"), :method => :post
        -else
          = link_to t(".contextmenu.cancel"), cancel_event_path(@event), :confirm => t(".confirm.cancel"), :method => :post
        | 
        = link_to t(".contextmenu.delete"), @event, :confirm => t(".confirm.delete"), :method => :delete
         
%h2= t(".themes.title")
%p= @event.tags.map{|tag| link_to h( tag.name), :controller=>:tag, :action=>tag.name}.join(', ')

%h2= t(".venue.title")
- if @event.canceled
  %p.red= t(".venue.canceled")
- else
  %p
    = startdate_nice(@event)
    = t(".venue.address", :address => @event.address)
    = t(".venue.location", :location => h(@event.location)) if @event.location?

  -if cookies[:google_maps] || cookies[:yahoo_maps] || cookies[:openlayers_maps]
    #map_canvas.indent{:style=>"width: 550px; height: 300px; border:solid 1px black;"}
      = @map.div(:width => 550, :height => 300)
    .center
      - if !cookies[:google_maps]
        = link_to t(".google_maps.show"), { :controller => "events", :action => "maps_on", :id => @event.id, :type=>:google}, :confirm => t(".google_maps.confirm")
        |
      - if !cookies[:yahoo_maps]
        = link_to t(".yahoo_maps.show"), { :controller => "events", :action => "maps_on", :id => @event.id, :type=>:yahoo}, :confirm => t(".yahoo_maps.confirm")
        |
      - if !cookies[:openlayers_maps]
        = link_to t(".openlayers_maps.show"), { :controller => "events", :action => "maps_on", :id => @event.id, :type=>:openlayers}, :confirm => t(".openlayers_maps.confirm")
        |
      = link_to t(".card.hide"), { :controller => "events", :action => "maps_off", :id => @event.id}
  -else
    .center
      = link_to t(".google_maps.show"), { :controller => "events", :action => "maps_on", :id => @event.id, :type=>:google}, :confirm => t(".google_maps.confirm")
      |
      = link_to t(".yahoo_maps.show"), { :controller => "events", :action => "maps_on", :id => @event.id, :type=>:yahoo}, :confirm => t(".yahoo_maps.confirm")
      |
      = link_to t(".openlayers_maps.show"), { :controller => "events", :action => "maps_on", :id => @event.id, :type=>:openlayers}, :confirm => t(".openlayers_maps.confirm")

%h2= t(".description.title")
%p= sanitize @event.description

%h3= t(".description.initiator.title")
%p
  = t(".description.initiator.text")
  = link_to h( @event.organisation.title), @event.organisation 

%h3= t(".description.info.title")
%p= sanitize link_to( h(@event.link), @event.link, :target=>'_new')

- comments = @event.comments.recent.all
- if !comments.empty? 
  %a{:name=>'comments'}
  %h2= t(".comments.list.title")
- comments.each_with_index do |comment, index|
  %a{ :name=>comment.id }
  %hr
  .comment_created_at
    = l(comment.created_at,:format => :long)
    -if logged_in?
      - allow :user => :is_admin? do
        .admin= link_to "(" + comment.user.login + ")", comment.user
  %h4 
    = String( index+1) + ")"
    = link_to h(comment.title), event_path(@event) + "#" + String(comment.id)
  %p
    = comment.comment
  - if logged_in?
    - if current_user.owns?(comment) || current_user.is_admin?
      .comment_context
        %div{ :class => event_comment_owner_class(comment) }
          = link_to t(".comments.context.delete"), { :controller => "events", :action => "delete_comment", :id => @event.id, :comment_id => comment.id }, :confirm => t(".comments.confirm.delete")

- if logged_in?
  - if @event.link
    %hr
    %h2= t(".comments.add.title")
    %p= t(".comments.add.hint")
    - form_for(Comment.new, :url => { :action => "add_comment" }) do |f|
      = f.hidden_field :commentable_id, :value => @event.id
      = f.hidden_field :commentable_type, :value => 1
      = f.hidden_field :user_id, :value => current_user.id
      %p
        = f.error_messages
      %p
        = f.label :title, t(".comments.field.title")
        = f.text_field :title, :size=>60
      %p
        = f.label :comment, t(".comments.field.comment")
        = f.text_area :comment, :cols=>60, :rows=>15;

      .buttons= f.submit t(".button.add_comment")

-# TINYMCE
:javascript
  tinyMCE.init({
  mode : "textareas",
  theme : "advanced",
  theme_advanced_buttons1 : "bold,italic,underline,strikethrough,forecolor,|,justifyleft,justifycenter,justifyright,justifyfull,bullist,numlist,|,undo,redo,|,link,unlink,|,hr",
  theme_advanced_buttons2 : "",
  theme_advanced_buttons3 : "",
  theme_advanced_toolbar_location : "top",
  theme_advanced_toolbar_align : "left",
  theme_advanced_statusbar_location : "bottom",  
  content_css : "/stylesheets/tinymce.css",
  language : "de"
  });
